Maximum Median


ou are given a sorted array A of N integers, where N is odd. You can make the following operation with it: Choose one of the elements of the array (for example ai) and increase it by 1 (that is, replace it with ai + 1). Return the largest possible median of the array using at most B operations. Note: The median of the odd-sized sorted array is the middle element after the array is sorted in non-decreasing order.



The first argument of input contains an integer array A, of length N.
The second argument of input contains a string B, representing the number of options.

Note: Please convert B to an integer from its string representation.


Input 1:
    A = [1, 3, 5]
    B = "2"

Output 1:
    "5"

Explanation 1:
    As 2nd element can be increased 2 times to make it 5.

Input 2:
    A = [1, 1, 1, 1, 2]
    B = "3"

Output 2:
    "3"

Explanation 2:
    Increase 2nd element once and fourth and last element 2 times.

class Solution:
    # @param A : list of integers
    # @param B : string
    # @return a strings
    def solve(self, A, B):
        
        n = len(A);
        B = int(B);
        mid = n//2;
        
        pre = [0 for i in range(n)];
        
        
        
        i = mid + 1;
        count = 1;
        while(i<n):
            temp = B - (A[i] - A[mid])*count;
            
            if(temp==0):
                return A[i];
            elif(temp<0):
                return A[mid] + B // count ; 
            
            B = temp;
            A[mid] = A[i];
            i+=1;
            count += 1;
        
        
        return A[mid] + B // count ;    
            
        
        

